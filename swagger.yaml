swagger: "2.0"
info:
  title: "DBpedia GStore API"
  version: "0.2.0-SNAPSHOT"
  description: "This is the DBpedia GStore web-api documentation."
basePath: "/"
schemes:
  - "http"
paths:
  /graph/save:
    post:
      summary: "Save graph."
      description: "Saving a graph to GStore."
      operationId: "saveFile"
      consumes:
        - "application/ld+json"
        - "text/turtle"
      produces:
        - "application/json"
      parameters:
        - in: query
          name: repo
          type: string
          description: "Repository name in which the graph is saved."
          required: true
          example: "testuser"
        - in: query
          name: path
          type: string
          description: "A path at which the graph will be saved."
          required: true
          example: "testgroup/test.jsonld"
        - in: query
          name: prefix
          description: "Prefix for graphid URL if it is not default. NOTE! should be without slash in the end."
          type: string
          required: false
          example: "http://foreighhost/api"
        - in: body
          name: body
          description: "Graph data in Turtle or JSONLD."
          required: true
          schema:
            type: string
            format: binary
            example: '{
                        "@context": "http://schema.org/",
                        "@type": "Person",
                        "name": "Jane Doe",
                        "jobTitle": "Professor",
                        "telephone": "(425) 123-4567",
                        "url": "http://www.janedoe.com"
                      }'
      responses:
        "200":
          description: "Successful operation."
          schema:
            $ref: "#/definitions/OperationSuccess"
        "400":
          description: "Returns a description of an error."
          schema:
            $ref: "#/definitions/OperationFailure"
  /graph/delete:
    delete:
      summary: "Delete graph."
      description: "Delete a graph from GStore."
      operationId: "deleteFile"
      produces:
        - "application/json"
      parameters:
        - in: query
          name: repo
          description: "Repository name in which the graph is stored."
          type: string
          required: true
          example: "testuser"
        - in: query
          name: path
          description: "A path at which the graph is stored."
          type: string
          required: true
          example: "testgroup/test.jsonld"
        - in: query
          name: prefix
          description: "Prefix for graphid URL if it is not default. NOTE! should be without slash in the end."
          type: string
          required: false
          example: "http://foreighhost/api"
      responses:
        "200":
          description: "Successful operation."
          schema:
            $ref: "#/definitions/OperationSuccess"
        "400":
          description: "Returns a description of an error."
          schema:
            $ref: "#/definitions/OperationFailure"
  /graph/read:
    get:
      summary: "Read a graph from GStore."
      description: "Read rdf graph from GStore."
      operationId: "getFile"
      produces:
        - "application/ld+json"
        - "text/turtle"
      parameters:
        - in: query
          name: repo
          description: "Repository name in which the graph is stored."
          type: string
          required: true
          example: "testuser"
        - in: query
          name: path
          description: "A path at which the graph is stored."
          type: string
          required: true
          example: "testgroup/test.jsonld"
      responses:
        "200":
          description: "A file data."
          schema:
            type: string
            format: binary
        "404":
          description: "Not found."
          schema:
            $ref: "#/definitions/OperationFailure"
  /shacl/validate:
    post:
      summary: "Validate a graph with SHACL."
      description: "Validates an RDF graph with SHACL shapes."
      operationId: "shaclValidate"
      consumes:
        - "multipart/form-data"
      produces:
        - "application/ld+json"
        - "text/turtle"
      parameters:
        - in: formData
          name: graph
          type: string
          required: true
          format: binary
          description: "RDF graph contents (jsonld expected)."
        - in: formData
          name: shacl
          type: string
          required: true
          format: binary
          description: "Contents of a SHACL file in ttl format."
      responses:
        "200":
          description: "Validation result in jsonld or turtle form."
          schema:
            type: string
            format: binary
        "400":
          description: "Invalid input."
  /dataid/tractate:
    post:
      summary: "DataID tractate."
      description: "Returns a subgraph of DataID for signing."
      operationId: "dataidSubgraph"
      consumes:
        - "application/ld+json"
      produces:
        - "text/plain"
      parameters:
        - in: "body"
          name: "body"
          description: "DataID graph in json-ld format."
          required: true
          schema:
            type: string
            format: binary
      responses:
        "200":
          description: "Returns DataID file tractate."
          schema:
            type: string
definitions:
  OperationSuccess:
    properties:
      graphid:
        description: "Graph id at which the graph is saved."
        type: "string"
      commit_hash:
        description: "A git commit hash of the operation."
        type: "string"
    required:
      - graphid
      - commit_hash
  OperationFailure:
    properties:
      message:
        type: "string"
    required:
      - message

