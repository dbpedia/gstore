swagger: "2.0"
info:
  description: "This is the DbPedia GStore web-api documentation."
  version: "1.0.0"
  title: "GStore API"
basePath: "/"
schemes:
  - "http"
paths:
  /graph/save:
    post:
      summary: "Save file"
      description: "Saving a graph to gstore"
      operationId: "saveFile"
      consumes:
        - "application/ld+json"
        - "text/turtle"
      produces:
        - "application/json"
      parameters:
        - in: query
          name: repo
          type: string
          required: true
          example: "testuser"
        - in: query
          name: path
          type: string
          required: true
          example: "testgroup/test.jsonld"
        - in: query
          name: prefix
          description: prefix for graphid URL if it is not default. NOTE! should be without slash in the end
          type: string
          required: false
          example: "http://foreighhost/api"
        - in: body
          name: body
          description: "Turtle or JSONLD."
          required: true
          schema:
            type: string
            format: binary
            example: '{
                        "@context": "http://schema.org/",
                        "@type": "Person",
                        "name": "Jane Doe",
                        "jobTitle": "Professor",
                        "telephone": "(425) 123-4567",
                        "url": "http://www.janedoe.com"
                      }'
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/OperationSuccess"
        "400":
          description: "invalid request"
          schema:
            $ref: "#/definitions/OperationFailure"
  /graph/delete:
    delete:
      summary: "Delete file"
      description: "Delete a graph from gstore."
      operationId: "deleteFile"
      produces:
        - "application/json"
      parameters:
        - in: query
          name: repo
          type: string
          required: true
          example: "testuser"
        - in: query
          name: path
          type: string
          required: true
          example: "testgroup/test.jsonld"
        - in: query
          name: prefix
          description: prefix for graphid URL if it is not default. NOTE! should be without slash in the end
          type: string
          required: false
          example: "http://foreighhost/api"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/OperationSuccess"
        "400":
          description: "graph does not exist"
          schema:
            $ref: "#/definitions/OperationFailure"
  /graph/read:
    get:
      summary: "Get file"
      description: "Read rdf graph from gstore."
      operationId: "getFile"
      produces:
        - "application/ld+json"
        - "text/turtle"
      parameters:
        - in: query
          name: repo
          type: string
          required: true
          example: "testuser"
        - in: query
          name: path
          type: string
          required: true
          example: "testgroup/test.jsonld"
      responses:
        "200":
          description: "A file"
          schema:
            type: string
            format: binary
        "404":
          description: "Not found"
          schema:
            $ref: "#/definitions/OperationFailure"
  /shacl/validate:
    post:
      summary: "Validate dataid with shacl"
      description: ""
      operationId: "shaclValidate"
      consumes:
        - "multipart/form-data"
      produces:
        - "application/ld+json"
        - "text/turtle"
      parameters:
        - in: formData
          name: graph
          type: string
          required: true
          format: binary
          description: "RDF graph contents (jsonld expected)"
        - in: formData
          name: shacl
          type: string
          required: true
          format: binary
          description: "Contents of a shacl file"
      responses:
        "200":
          description: "validation result in jsonld or turtle form"
          schema:
            type: string
            format: binary
        "400":
          description: "invalid input"
  /dataid/tractate:
    post:
      summary: "Returns a subgraph of dataid for signing"
      description: ""
      operationId: "dataidSubgraph"
      consumes:
        - "application/ld+json"
      produces:
        - "text/plain"
      parameters:
        - in: "body"
          name: "body"
          description: "Returns dataid file tractate"
          required: true
          schema:
            type: string
            format: binary
      responses:
        "200":
          description: "successful operation, here we can just use Base64 encoded body"
          schema:
            type: string
definitions:
  OperationSuccess:
    properties:
      graphid:
        type: "string"
      commit_hash:
        type: "string"
    required:
      - graphid
      - commit_hash
  OperationFailure:
    properties:
      message:
        type: "string"
    required:
      - message

