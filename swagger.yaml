swagger: "2.0"
info:
  description: "This is the DbPedia databus web-api draft."
  version: "1.0.0"
  title: "Databus API"
basePath: "/databus"
schemes:
  - "https"
paths:
  /{username}/{group}:
    put:
      summary: "Create group"
      description: ""
      operationId: "createGroup"
      consumes:
        - "application/ld+json"
      produces:
        - "application/json"
      parameters:
        - in: path
          name: group
          type: string
          required: true
          description: Group name
        - in: path
          name: username
          type: string
          required: true
        - in: "body"
          name: "body"
          description: "Turtle or JSONLD with group meta."
          required: true
          schema:
            type: string
            format: binary
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/ApiResponse"
    delete:
      summary: "Delete group"
      description: ""
      operationId: "deleteGroup"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: path
          name: group
          type: string
          required: true
          description: Group name
        - in: path
          name: username
          type: string
          required: true
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/ApiResponse"
    get:
      summary: "Get group meta"
      description: ""
      operationId: "getGroup"
      produces:
        - "application/ld+json"
        - "text/turtle"
      parameters:
        - in: path
          name: group
          type: string
          required: true
          description: Group name
        - in: path
          name: username
          type: string
          required: true
      responses:
        "200":
          description: "A group description file"
          schema:
            type: string
            format: binary
  /{username}/{group}/{artifact}/{version}:
    put:
      summary: "Create version"
      description: ""
      operationId: "createVersion"
      consumes:
        - "application/ld+json"
      produces:
        - "application/json"
      parameters:
        - in: path
          name: version
          type: string
          required: true
          description: Version name
        - in: path
          name: group
          type: string
          required: true
          description: Version name
        - in: path
          name: username
          type: string
          required: true
          description: Version name
        - in: path
          name: artifact
          type: string
          required: true
          description: Version name
        - in: "body"
          name: "body"
          description: "Turtle or JSONLD with version meta."
          required: true
          schema:
            type: string
            format: binary
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/ApiResponse"
    delete:
      summary: "Delete version"
      description: ""
      operationId: "deleteVersion"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: path
          name: version
          type: string
          required: true
          description: Version name
        - in: path
          name: group
          type: string
          required: true
          description: Version name
        - in: path
          name: username
          type: string
          required: true
          description: Version name
        - in: path
          name: artifact
          type: string
          required: true
          description: Version name
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/ApiResponse"
    get:
      summary: "Get version meta"
      description: ""
      operationId: "getVersion"
      produces:
        - "application/ld+json"
        - "text/turtle"
      parameters:
        - in: path
          name: version
          type: string
          required: true
          description: Version name
        - in: path
          name: group
          type: string
          required: true
          description: Version name
        - in: path
          name: username
          type: string
          required: true
          description: Version name
        - in: path
          name: artifact
          type: string
          required: true
          description: Version name
      responses:
        "200":
          description: "A dataid file"
          schema:
            type: string
            format: binary
  /{username}/{group}/{artifact}/{version}/signature:
    put:
      summary: "Save dataid signature"
      description: ""
      operationId: "saveSignature"
      produces:
        - "application/json"
      parameters:
        - in: path
          name: version
          type: string
          required: true
          description: Version name
        - in: path
          name: group
          type: string
          required: true
          description: Version name
        - in: path
          name: username
          type: string
          required: true
          description: Version name
        - in: path
          name: artifact
          type: string
          required: true
          description: Version name
        - in: "body"
          name: "body"
          description: "binary signature"
          required: true
          schema:
            type: string
            format: binary
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/ApiResponse"
    delete:
      summary: "Delete dataid signature"
      description: ""
      operationId: "deleteSignature"
      produces:
        - "application/json"
      parameters:
        - in: path
          name: version
          type: string
          required: true
          description: Version name
        - in: path
          name: group
          type: string
          required: true
          description: Version name
        - in: path
          name: username
          type: string
          required: true
          description: Version name
        - in: path
          name: artifact
          type: string
          required: true
          description: Version name
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/ApiResponse"
    get:
      summary: "Get dataid signature"
      description: ""
      operationId: "getSignature"
      parameters:
        - in: path
          name: version
          type: string
          required: true
          description: Version name
        - in: path
          name: group
          type: string
          required: true
          description: Version name
        - in: path
          name: username
          type: string
          required: true
          description: Version name
        - in: path
          name: artifact
          type: string
          required: true
          description: Version name
      responses:
        "200":
          description: "signature"
          schema:
            type: string
            format: binary
  /api/dataid/tractate/:
    post:
      summary: "Returns a subgraph of dataid for signing"
      description: ""
      operationId: "dataidSubgraph"
      consumes:
        - "application/json"
      produces:
        - "text/plain"
      parameters:
        - in: "body"
          name: "body"
          description: "Returns dataid file tractate"
          required: true
          schema:
            type: string
            format: binary
      responses:
        "200":
          description: "successful operation, here we can just use Base64 encoded body"
          schema:
            type: string
definitions:
  DataIdSignatureMeta:
    type: "object"
    description: "may be needed to add some more details"
    properties:
      hash:
        type: "string"
  ApiResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      type:
        type: "string"
      message:
        type: "string"
